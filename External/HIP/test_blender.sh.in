#!/bin/bash

set -x

export HIPCC_VERBOSE=1
export HIPCC_COMPILE_FLAGS_APPEND="-save-temps"
export HIP_CLANG_PATH="@HIP_CLANG_PATH@"
export AMD_LOG_LEVEL=3
export BLENDER_BRANCH=${BLENDER_BRANCH:-blender-v4.0-release}

TEST_SUITE_BLENDER_ROOT=@TEST_SUITE_BLENDER_ROOT@

clone() {
  cd $TEST_SUITE_BLENDER_ROOT
  [[ -d blender ]] || git clone -b $BLENDER_BRANCH --depth 1 https://projects.blender.org/blender/blender.git
  cd blender
  git checkout $BLENDER_BRANCH
  git pull
  git submodule update --init --recursive
}

update() {
  mkdir -p $TEST_SUITE_BLENDER_ROOT/lib
  cd $TEST_SUITE_BLENDER_ROOT/lib
  svn checkout https://svn.blender.org/svnroot/bf-blender/trunk/lib/linux_x86_64_glibc_228
  cd $TEST_SUITE_BLENDER_ROOT/blender
  make update
}

depend() {
  $TEST_SUITE_BLENDER_ROOT/blender/build_files/build_environment/install_linux_packages.py
  pip install scikit-image
  pip install opencv-python
}

build() {
  cd $TEST_SUITE_BLENDER_ROOT/blender
  
  export HIP_ROOT_DIR=/opt/rocm/hip
 
  export HIPCC_VERBOSE=1
  export HIPCC_COMPILE_FLAGS_APPEND="-save-temps"
  export HIPCC_LINK_FLAGS_APPEND="-save-temps"
  export CXX=/opt/rocm/llvm/bin/clang++

  rm -rf ../build_linux
  make VERBOSE=1
}

compare_image() {
  python $scripts/redshift.compare.image.jakub.py -i $1 -r $2 2>&1 | tee compare.txt
  # Extract the similarity index using grep and awk
  SIMILARITY=$(cat compare.txt | grep -o 'Similarity index: [0-9]\+\(\.[0-9]\+\)\?' | awk '{print $3}')

  # Compare the similarity index to the threshold
  if (( $(echo "$SIMILARITY < 0.9" | bc -l) )); then
    return 1
  else
    return 0
  fi
}

run() {
  rm -rf ~/.cache/cycles
  [[ -e ${TEST_SUITE_BLENDER_ROOT}/build_linux/bin/blender ]] || build
  cd ${TEST_SUITE_BLENDER_ROOT}/build_linux/bin
  #mv 4.0/scripts/addons/cycles/lib 4.0/scripts/addons/cycles/lib.orig
  
  export LD_LIBRARY_PATH=/opt/rocm/lib:$PATH
  export HIPCC_VERBOSE=3
  export HIPCC_COMPILE_FLAGS_APPEND="-save-temps"
  #./blender -b $dir/Blender_Scenes/bmw27_gpu.blend -f 1 --log-level -1 --debug-cycles --verbose 4 --cycles-device HIP
  #./blender -b $dir/Blender_Scenes/bmw27_gpu.blend -f 1 -- --cycles-device HIP
  ./blender -b ${TEST_SUITE_BLENDER_ROOT}/Blender_Scenes/barbershop_interior_gpu.blend -f 1 -- --cycles-device HIP &&
  compare_image $dir/Blender_Scenes/0001.png $dir/Blender_Scenes/barborshop.ref.png
  if [[ $? -ne 0 ]]; then
    echo "Blender fails at run $i"
    exit $?
  fi
}

compile_kernel() {
  clang=/home/yaxunl/git/llvm2/assert/bin/clang++
  $clang -D__HIP_HCC_COMPAT_MODE__=1 -isystem "/opt/rocm-6.0.0-4018/include" --offload-arch=gfx1031 --offload-arch=gfx1030 --offload-arch=gfx1032 --offload-arch=gfx1033  -save-temps  -Wno-parentheses-equality -Wno-unused-value -O3 -ffast-math -I /home/yaxunl/git/hipBlender/build_linux/bin/4.0/scripts/addons/cycles/source --cuda-device-only -x hip /home/yaxunl/git/hipBlender/build_linux/bin/4.0/scripts/addons/cycles/source/kernel/device/hip/kernel.cpp -emit-llvm -o tmp.bc -c -v -disable-llvm-passes --gpu-bundle-output -foffload-compress
}

#clone
#depends
#update
#build
#compile_kernel
run
